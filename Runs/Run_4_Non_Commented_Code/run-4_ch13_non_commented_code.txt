#1 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_10_line_no_14_ASR.py

Yes, there is a bug in the provided code. The else statement should be indented one level further so that it is part of the if statement. The code should be changed to:

def find_boyer_moore(T, P):
  n, m = len(T), len(P)
  if m == 0: return 0
  last = {}
  for k in range(m):
    last[ P[k] ] = k
  i = m-1
  k = m-1
  while i < n:
    if T[i] == P[k]:
      if k == 0:
        return i
      else:
        i += 1
        k -= 1
    else:
      j = last.get(T[i], -1)
      i += m - min(k, j + 1)
      k = m - 1
  return -1


#2 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_11_line_no_15_ASR.py

No, there are no bugs in the provided code.


#3 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_12_line_no_18_ASR.py

No, there are no bugs in the provided code.


#4 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_13_line_no_3_COI.py

No, there are no bugs in the provided code.


#5 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_14_line_no_10_COI.py

No, there are no bugs in the provided code.


#6 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_15_line_no_11_COI.py

Yes, there is a bug in the provided code. The code should be changed to:

def find_boyer_moore(T, P):
  n, m = len(T), len(P)
  if m == 0: return 0
  last = {}
  for k in range(m):
    last[ P[k] ] = k
  i = m-1
  k = m-1
  while i < n:
    if T[i] == P[k]:
      if k == 0:
        return i
      else:
        i -= 1
        k -= 1
    else:
      j = last.get(T[i], -1)
      i += m - min(k, j + 1)
      k = m - 1
  return -1


#7 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_16_line_no_12_COI.py

Yes, there is a bug in the provided code. The code should be changed to the following:

def find_boyer_moore(T, P):
  n, m = len(T), len(P)
  if m == 0: return 0
  last = {}
  for k in range(m):
    last[ P[k] ] = k
  i = m-1
  k = m-1
  while i < n:
    if T[i] == P[k]:
      if k == 0:
        return i
      else:
        i -= 1
        k -= 1
    else:
      j = last.get(T[i], -1)
      i += m - min(k, j + 1)
      k = m - 1
  return -1


#8 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_17_line_no_3_ROR.py

No, there are no bugs in the provided code.


#9 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_18_line_no_10_ROR.py

Yes, there is a bug in the provided code. The while loop should be changed to an if statement. The code should be changed to:

def find_boyer_moore(T, P):
  n, m = len(T), len(P)
  if m == 0: return 0
  last = {}
  for k in range(m):
    last[ P[k] ] = k
  i = m-1
  k = m-1
  while i < n:
    if i > n:
      if k == 0:
        return i
      else:
        i -= 1
        k -= 1
    else:
      j = last.get(T[i], -1)
      i += m - min(k, j + 1)
      k = m - 1
  return -1


#10 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_19_line_no_10_ROR.py

No, there are no bugs in the provided code.


#11 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_1_line_no_17_AOD.py

No, there are no bugs in the provided code.


#12 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_20_line_no_11_ROR.py

Yes, there is a bug in the provided code. The code should be changed to:

def find_boyer_moore(T, P):
  n, m = len(T), len(P)
  if m == 0: return 0
  last = {}
  for k in range(m):
    last[ P[k] ] = k
  i = m-1
  k = m-1
  while i < n:
    if T[i] == P[k]:
      if k == 0:
        return i
      else:
        i -= 1
        k -= 1
    else:
      j = last.get(T[i], -1)
      i += m - min(k, j + 1)
      k = m - 1
  return -1


#13 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_21_line_no_12_ROR.py

Yes, there is a bug in the provided code. The indentation of the "if k == 0:" statement is incorrect. The code should be:

def find_boyer_moore(T, P):
  n, m = len(T), len(P)
  if m == 0: return 0
  last = {}
  for k in range(m):
    last[ P[k] ] = k
  i = m-1
  k = m-1
  while i < n:
    if T[i] == P[k]:
      if k == 0:
        return i
      else:
        i -= 1
        k -= 1
    else:
      j = last.get(T[i], -1)
      i += m - min(k, j + 1)
      k = m - 1
  return -1


#14 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_2_line_no_20_AOD.py

No, there are no bugs in the provided code.


#15 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_3_line_no_8_AOR.py

Yes, there is a bug in the provided code. The line "i = m-1" should be "i = m-1" instead. This line should be changed to "i = m-1" so that the loop starts at the index of the last character in the pattern.


#16 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_4_line_no_9_AOR.py

Yes, there is a bug in the provided code. The line "k = m + 1" should be removed as it is not necessary and it is causing the code to not work properly. After removing this line, the code should look like this:

def find_boyer_moore(T, P):
  n, m = len(T), len(P)
  if m == 0: return 0
  last = {}
  for k in range(m):
    last[ P[k] ] = k
  i = m-1
  k = m-1
  if T[i] == P[k]:
      if k == 0:
        return i
      else:
        i -= 1
        k -= 1
    else:
      j = last.get(T[i], -1)
      i += m - min(k, j + 1)
      k = m - 1
  return -1


#17 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_5_line_no_17_AOR.py

No, there are no bugs in the provided code.


#18 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_6_line_no_18_AOR.py

No, there are no bugs in the provided code.


#19 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_7_line_no_18_AOR.py

No, there are no bugs in the provided code.


#20 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_8_line_no_19_AOR.py

No, there are no bugs in the provided code.


#21 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_boyer_moore\mutation_9_line_no_20_AOR.py

No, there are no bugs in the provided code.


#22 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_10_line_no_5_ROR.py

Yes, there is a bug in the provided code. The while loop should be changed to an if statement. The code should be changed to:

def find_brute(T, P):
  n, m = len(T), len(P)
  for i in range(n-m+1):
    k = 0
    if (k > m and T[i + k] == P[k]):
      k += 1
    if k == m:
      return i
  return -1


#23 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_11_line_no_5_ROR.py

No, there are no bugs in the provided code.


#24 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_12_line_no_5_ROR.py

No, there are no bugs in the provided code.


#25 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_13_line_no_7_ROR.py

No, there are no bugs in the provided code.


#26 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_1_line_no_9_AOD.py

No, there are no bugs in the provided code.


#27 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_2_line_no_3_AOR.py

No, there are no bugs in the provided code.


#28 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_3_line_no_3_AOR.py

No, there are no bugs in the provided code.


#29 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_4_line_no_5_AOR.py

No, there are no bugs in the provided code.


#30 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_5_line_no_9_AOR.py

No, there are no bugs in the provided code.


#31 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_6_line_no_6_ASR.py

Yes, there is a bug in the provided code. The while loop should have k += 1 instead of k -= 1. The corrected code should look like this:

def find_brute(T, P):
  n, m = len(T), len(P)
  for i in range(n-m+1):
    k = 0
    while k < m and T[i + k] == P[k]:
      k += 1
    if k == m:
      return i
  return -1


#32 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_7_line_no_5_COI.py

No, there are no bugs in the provided code.


#33 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_8_line_no_7_COI.py

No, there are no bugs in the provided code.


#34 Tests_Final/Ch13/Mutation/Non_Commented_Code\find_brute\mutation_9_line_no_5_LCR.py

No, there are no bugs in the provided code.


