[*] Start mutation process:
   - targets: ch10/word_frequency.py
   - tests: tests/ch10/test_word_frequency.py
[*] 5 tests passed:
   - test_word_frequency [0.01144 s]
[*] Start mutants generation and execution:
   - [#   1] AOR word_frequency: 
--------------------------------------------------------------------------------
  43:     with open(filename) as file:
  44:         for piece in file.read().lower().split():
  45:             word = ''.join((c for c in piece if c.isalpha()))
  46:             if word:
- 47:                 freq[word] = 1 + freq.get(word, 0)
+ 47:                 freq[word] = 1 - freq.get(word, 0)
  48:     
  49:     max_word = ''
  50:     max_count = 0
  51:     for (w, c) in freq.items():
--------------------------------------------------------------------------------
[0.00000 s] killed by test_case_insensitivity (test_word_frequency.TestFindMostFrequentWord)
   - [#   2] COI word_frequency: 
--------------------------------------------------------------------------------
  42:     freq = {}
  43:     with open(filename) as file:
  44:         for piece in file.read().lower().split():
  45:             word = ''.join((c for c in piece if c.isalpha()))
- 46:             if word:
+ 46:             if not word:
  47:                 freq[word] = 1 + freq.get(word, 0)
  48:     
  49:     max_word = ''
  50:     max_count = 0
--------------------------------------------------------------------------------
[0.00000 s] killed by test_case_insensitivity (test_word_frequency.TestFindMostFrequentWord)
   - [#   3] COI word_frequency: 
--------------------------------------------------------------------------------
  48:     
  49:     max_word = ''
  50:     max_count = 0
  51:     for (w, c) in freq.items():
- 52:         if c > max_count:
+ 52:         if not (c > max_count):
  53:             max_word = w
  54:             max_count = c
  55:     
  56:     return (max_word, max_count)
--------------------------------------------------------------------------------
[0.00998 s] killed by test_case_insensitivity (test_word_frequency.TestFindMostFrequentWord)
   - [#   4] ROR word_frequency: 
--------------------------------------------------------------------------------
  48:     
  49:     max_word = ''
  50:     max_count = 0
  51:     for (w, c) in freq.items():
- 52:         if c > max_count:
+ 52:         if c < max_count:
  53:             max_word = w
  54:             max_count = c
  55:     
  56:     return (max_word, max_count)
--------------------------------------------------------------------------------
[0.00000 s] killed by test_case_insensitivity (test_word_frequency.TestFindMostFrequentWord)
   - [#   5] ROR word_frequency: 
--------------------------------------------------------------------------------
  48:     
  49:     max_word = ''
  50:     max_count = 0
  51:     for (w, c) in freq.items():
- 52:         if c > max_count:
+ 52:         if c >= max_count:
  53:             max_word = w
  54:             max_count = c
  55:     
  56:     return (max_word, max_count)
--------------------------------------------------------------------------------
[0.00573 s] survived
[*] Mutation score [0.10465 s]: 80.0%
   - all: 5
   - killed: 4 (80.0%)
   - survived: 1 (20.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
